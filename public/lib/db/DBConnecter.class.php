<?php

// Generated by Haxe 3.4.7
class db_DBConnecter {
	public function __construct(){}
	static function getById($tableName, $params) {
		if(!$params->exists("id")) {
			return utils_Response::create("error", utils_ErrorMessage::create("parameter", "specify", "id"));
		}
		$data = db_DBConnecter::getTableInstanse($tableName);
		$data1 = $data->getById($params->get("id"), null);
		if($data1 === null) {
			return utils_Response::create("error", utils_ErrorMessage::create("database", "found", "data"));
		}
		return utils_Response::create("success", $data1);
	}
	static function getList($tableName, $params) {
		$data = db_DBConnecter::getTableInstanse($tableName)->getList(null, null, null);
		if($data === null) {
			return utils_Response::create("error", utils_ErrorMessage::create("database", "found", "data"));
		}
		return utils_Response::create("success", $data);
	}
	static function set($tableName, $params, $requiredColumns) {
		$parseData = utils_WebParameter::parse($params, $requiredColumns);
		if(!$parseData->isOK) {
			return utils_Response::create("error", utils_ErrorMessage::create("parameter", "specify", $parseData->specifyList));
		}
		$table = db_DBConnecter::getTableInstanse($tableName);
		$table->setRow($parseData->params);
		return utils_Response::create("success", $table->getLatestRowById(null));
	}
	static function enable($tableName, $params) {
		if(!$params->exists("id")) {
			return utils_Response::create("error", utils_ErrorMessage::create("parameter", "specify", "id"));
		}
		$id = $params->get("id");
		$table = db_DBConnecter::getTableInstanse($tableName);
		$data = $table->getById($id, null);
		$table->enable($id);
		if($data === null) {
			return utils_Response::create("error", utils_ErrorMessage::create("database", "found", "data"));
		}
		return utils_Response::create("success", $data);
	}
	static function disable($tableName, $params) {
		if(!$params->exists("id")) {
			return utils_Response::create("error", utils_ErrorMessage::create("parameter", "specify", "id"));
		}
		$id = $params->get("id");
		$table = db_DBConnecter::getTableInstanse($tableName);
		$data = $table->getById($id, null);
		$table->disable($id);
		if($data === null) {
			return utils_Response::create("error", utils_ErrorMessage::create("database", "found", "data"));
		}
		return utils_Response::create("success", $data);
	}
	static function getTableInstanse($tableName) {
		switch($tableName) {
		case "post":{
			return new db_table_Post();
		}break;
		case "user":{
			return new db_table_User();
		}break;
		}
	}
	function __toString() { return 'db.DBConnecter'; }
}
